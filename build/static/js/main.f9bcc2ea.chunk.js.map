{"version":3,"sources":["comps/Menu.jsx","comps/Navbar.jsx","services/cryptoApi.js","comps/Cryptocurrencies.jsx","comps/News.jsx","comps/Homepage.jsx","comps/Exchanges.jsx","comps/CryptoDetails.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Menu","className","to","Navbar","useState","showMenu","setShowMenu","MenuFoldOutlined","onClick","MenuUnfoldOutlined","cryptoApiHeaders","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","url","headers","useGetCryptosQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","coins","cryptos","map","crypto","id","rank","name","alt","src","iconUrl","millify","price","marketCap","change","News","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","totalMarkets","total24hVolume","Exchanges","CryptoDetails","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"mUAwBeA,EArBF,WACT,OACI,qBAAMC,UAAY,uBAAlB,SACA,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,oBAAT,gCAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,aAAT,yBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,QAAT,0BCoBDC,EA7BA,WAEX,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,OACI,sBAAKL,UAAU,gBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,oBAAIA,UAAU,OAAd,SACI,eAAC,IAAD,CAAMC,GAAG,IAAT,oBACW,oDAGdG,GAAY,cAACE,EAAA,EAAD,CAAkBN,UAAU,YAAYO,QAAS,kBAAMF,GAAY,OAC9ED,GAAY,cAACI,EAAA,EAAD,CAAoBR,UAAU,aAAaO,QAAS,kBAAMF,GAAY,SAExF,sBAAKL,UAAU,iBAAf,UACKI,GAAY,cAAC,EAAD,IACb,qBAAKJ,UAAU,eAAf,SACI,cAAC,EAAD,a,yCC3BdS,EAAmB,CACvB,kBAAmB,8BACnB,iBAAkB,sDAOPC,EAAYC,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QANd,wCAOdC,UAAW,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQE,MAAM,CACtBA,MAAO,SAACC,GAAD,MAPe,CAACC,IAOS,gBAAD,OAAkBD,GAPrBE,QAASb,UAa3Cc,EACAb,EADAa,mBCeWC,G,MA/BU,SAAC,GAAkB,IAAD,EAAhBC,EAAgB,EAAhBA,WAEtB,EAAwCF,EAD1BE,EAAa,GAAK,KACnBC,EAAb,EAAQC,KAAkBC,EAA1B,EAA0BA,WAC1B,EAA8BzB,mBAAQ,OAACuB,QAAD,IAACA,GAAD,UAACA,EAAeC,YAAhB,aAAC,EAAsBE,OAA7D,mBAAOC,EAAP,UACD,OAAGF,EAAmB,aAIlB,8BACKE,EAAQC,KAAI,SAACC,GAAD,OACT,oBAAIhC,UAAU,cAAd,SACE,6BACM,eAAC,IAAD,CAAMC,GAAE,kBAAc+B,EAAOC,GAArB,KAAR,UACM,sBAAKjC,UAAU,QAAf,UACM,+BAAKgC,EAAOE,KAAZ,KAAoBF,EAAOG,QACjC,qBAAKC,IAAI,SAASC,IAAKL,EAAOM,aAE9B,sBAAKtC,UAAU,UAAf,UACM,4CAAeuC,IAAQP,EAAOQ,UAC9B,6CAAgBD,IAAQP,EAAOS,cAC/B,gDAAmBT,EAAOU,OAA1B,wBChBrBC,EARF,WACT,OACI,8BACI,yCC8DGC,EA3DE,WAAO,IAAD,EAEnB,EAA6BrB,EAAmB,IAAxCI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRiB,EAAW,OAAGlB,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYmB,MAEhC,OAAIlB,EAAmB,aAInB,sBAAK5B,UAAU,WAAf,UACA,qCACI,oBAAIA,UAAU,UAAd,yCACA,qBAAIA,UAAU,OAAd,UACI,qBAAIA,UAAU,OAAd,UACI,oBAAIA,UAAU,QAAd,oCACA,qBAAKA,UAAU,UAAf,SACK6C,EAAYE,WAGrB,qBAAI/C,UAAU,OAAd,UACI,oBAAIA,UAAU,QAAd,6BACA,qBAAKA,UAAU,UAAf,SACK6C,EAAYG,oBAGrB,qBAAIhD,UAAU,OAAd,UACI,oBAAIA,UAAU,QAAd,8BACA,qBAAKA,UAAU,UAAf,SACKuC,IAAQM,EAAYI,qBAG7B,qBAAIjD,UAAU,OAAd,UACI,oBAAIA,UAAU,QAAd,2BACA,qBAAKA,UAAU,UAAf,SACKuC,IAAQM,EAAYK,mBAG7B,qBAAIlD,UAAU,OAAd,UACI,oBAAIA,UAAU,QAAd,+BACA,qBAAKA,UAAU,UAAf,SACKuC,IAAQM,EAAYM,2BAKlC,sBAAKnD,UAAU,aAAf,UACK,0DACA,cAAC,EAAD,CAAkByB,YAAU,IAC5B,cAAC,IAAD,CAAMzB,UAAU,OAAOC,GAAG,oBAA1B,+BAEL,sBAAKD,UAAU,aAAf,UACK,kDACA,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,QAA1B,2BACA,cAAC,EAAD,CAAMwB,YAAU,WCnDjB2B,EARG,WACd,OACI,8BACI,8CCKGC,EARO,WAClB,OACI,8BACI,kDC8CGC,MApCf,WACE,OACE,sBAAKtD,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,WAKN,sBAAKxD,UAAU,SAAf,UACE,mDACA,oDACA,cAAC,IAAD,CAAMC,GAAG,SAAT,0BCjCOwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCJCQ,cAAe,CAC1BC,QAAQ,eACHzD,EAAUE,YAAcF,EAAUyD,WCI3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.f9bcc2ea.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\n\r\n\r\nconst Menu = () => {\r\n    return (\r\n        < div className = \"menu-items-container\" >\r\n        <ol>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n            </li>\r\n            <li >\r\n                <Link to=\"/exchanges\">Exchanges</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/news\">News</Link>\r\n            </li>\r\n        </ol>\r\n    </div >\r\n    )\r\n}\r\n\r\nexport default Menu\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons'\r\nimport '../styles/Navbar.scss'\r\nimport { useState } from 'react'\r\nimport Menu from './Menu'\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"menu-icon-container\">\r\n                <h1 className=\"logo\">\r\n                    <Link to=\"/\">\r\n                        Crypto <span>Wall Street</span>\r\n                    </Link>\r\n                </h1>\r\n                {showMenu && <MenuFoldOutlined className=\"menu-open\" onClick={() => setShowMenu(false)} />}\r\n                {!showMenu && <MenuUnfoldOutlined className=\"menu-close\" onClick={() => setShowMenu(true)} />}\r\n            </div>\r\n            <div className=\"menu-container\">\r\n                {showMenu && <Menu />}\r\n                <div className=\"desktop-menu\">\r\n                    <Menu />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"eb6d684b20mshd3b4025d7c50329p141521jsn8cb44c488bff\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n      getCryptos: builder.query({\r\n          query: (count) => createRequest( `/coins?limit=${count}`)\r\n      })\r\n  })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery\r\n} = cryptoApi","import React, {useState} from 'react'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport {Link} from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport '../styles/cryptocurrencies.scss'\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n     const count = simplified ? 10 : 100;\r\n     const { data:cryptosList, isFetching} = useGetCryptosQuery(count)\r\n     const [cryptos, setCryptos] = useState(cryptosList ?. data ?.coins)\r\n    if(isFetching) return 'Loading...'\r\n      \r\n      \r\n    return (\r\n        <div>\r\n            {cryptos.map((crypto) => (\r\n                <ol className=\"crypto-list\">\r\n                  <li>\r\n                        <Link to={ `/crypto/${crypto.id} `}>\r\n                              <div className=\"title\">\r\n                                    <h1>{crypto.rank}. {crypto.name}</h1>\r\n                              <img alt='crypto' src={crypto.iconUrl} />\r\n                              </div>\r\n                              <div className=\"details\">\r\n                                    <p>Price: USD {millify(crypto.price)}</p>\r\n                                    <p>Market Cap: {millify(crypto.marketCap)}</p>\r\n                                    <p>Daily Changes: {crypto.change}%</p>\r\n                                    \r\n                              </div>\r\n                        </Link>\r\n                  </li>\r\n                </ol>\r\n            ))} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/homepage.scss'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Cryptocurrencies from './Cryptocurrencies'\r\nimport News from './News'\r\n\r\nconst Homepage = () => {\r\n\r\n    const { data, isFetching } = useGetCryptosQuery(10)\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return 'Loading...'\r\n\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n        <>\r\n            <h1 className=\"headimg\">Global Cryptocurrency Stats</h1>\r\n            <ol className=\"list\">\r\n                <li className=\"item\">\r\n                    <h3 className=\"title\">Total Cryptocurrencies</h3>\r\n                    <div className=\"content\">\r\n                        {globalStats.total}\r\n                    </div>\r\n                </li>\r\n                <li className=\"item\">\r\n                    <h3 className=\"title\">Total Exchanges</h3>\r\n                    <div className=\"content\">\r\n                        {globalStats.totalExchanges}\r\n                    </div>\r\n                </li>\r\n                <li className=\"item\">\r\n                    <h3 className=\"title\">Total Market Cap</h3>\r\n                    <div className=\"content\">\r\n                        {millify(globalStats.totalMarketCap)}\r\n                    </div>\r\n                </li>\r\n                <li className=\"item\">\r\n                    <h3 className=\"title\">Total Markets</h3>\r\n                    <div className=\"content\">\r\n                        {millify(globalStats.totalMarkets)}\r\n                    </div>\r\n                </li>\r\n                <li className=\"item\">\r\n                    <h3 className=\"title\">Total 24hr Volume</h3>\r\n                    <div className=\"content\">\r\n                        {millify(globalStats.total24hVolume)}\r\n                    </div>\r\n                </li>\r\n            </ol>\r\n            </>\r\n           <div className=\"top-crypto\">\r\n                <h1>Top 10 Cryptocurrencies </h1>\r\n                <Cryptocurrencies simplified />\r\n                <Link className=\"more\" to=\"/Cryptocurrencies\">More Coins... </Link>\r\n           </div>\r\n           <div className=\"top-crypto\">\r\n                <h1>Top Crypto News </h1>\r\n                <Link className=\"more\" to=\"/News\">More Updates </Link>\r\n                <News simplified />\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\n\r\nconst Exchanges = () => {\r\n    return (\r\n        <div>\r\n            <h1>Exchanges</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import React from 'react'\r\n\r\nconst CryptoDetails = () => {\r\n    return (\r\n        <div>\r\n            <h1>CryptoDetails</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import './styles/App.scss';\n\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './comps/Navbar';\nimport Homepage from './comps/Homepage';\nimport Exchanges from './comps/Exchanges';\nimport CryptoDetails from './comps/CryptoDetails';\nimport Cryptocurrencies from './comps/Cryptocurrencies';\nimport News from './comps/News';\nimport About from './comps/About';\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n\n      <div className=\"main\">\n        <div className=\"routes\">\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route exact path=\"/exchanges\">\n            <Exchanges />\n          </Route>\n          <Route exact path=\"/cryptocurrencies\">\n            <Cryptocurrencies />\n          </Route>\n          <Route exact path=\"/crypto/:coinId\">\n            <CryptoDetails />\n          </Route>\n          <Route exact path=\"/news\">\n            <News />\n          </Route>\n        </div>\n      </div>\n\n      <div className=\"footer\">\n        <h2>Crypto Wallstreet</h2>\n        <p>All rights reserved</p>\n        <Link to=\"/About\">About</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    }\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}